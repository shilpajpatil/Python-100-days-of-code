Pytest 

#1. Basics of pytest:   [Refer: test_BasicFirst.py ]

  * pytest is a Python testing framework based on Python.
  * Installing pytest:   pip install pytest
  * Running pytest without mentioning the filename will run all files if format test_*.py,_test.py in the current directory or subdirectories.
  * Pytest automatically identifies those files as test files.
  * Any code should be wrapped in the method.

# How to run test cases using command prompt:
      * for running a test case using the command prompt you have to use the following command:
            command: py.test

      * If you have to run multiple commands at a time then you can use the following command:
        Step1: go to that path where your at test files are saved
        
            command : py.test -v

      * if you want to see the full result then you can use the following command:

            Command: py. test -v -s

#2 In pytest if you want to compare two things you have to use assert [Refer: test_assert.py]   

#3.  How to Run one test case and another test case from another file        [Refer: test_demo.py, test_demo2.py ]
   * For this you have to use a command as follows:

          Command:   py. test -k [(name of the method) which is the same for all the methods]  -v -s

                    here I will  use the command:    py.test -k sqrt -v -s
                               sqrt named functions are available in both test_demo.py and test_demo2.py

                     -k:  executing method name 
                     -v:  Displaying logs of output
                     -s:  more information about metadata

#4. The pytest module will provide a mark. smoke :     [Refer: test_skiporsmoke.py test_skiporsmoke,py2]
      - @pytest.mark.smoke is used to run multiple test cases at one time.
      - @pytest.mark.xfail is used to run but not display anything
      - @pytest.mark.skip used to test is falling & we didn't get the actual result.

#5 fixture in pytest:       [Refer: tes_fixturedemo.py]
    - Fixtures are functions, which will run before each test function to which it is applied. 
    - Fixtures are used to feed some data to the tests such as database connections, URLs to test, and some sort of input data.
    - conftest.py: We can define the fixture functions in this file to make them accessible across multiple test files.
    - If you want to apply a fixture on multiple functions then there is no need to pass the fixture to that function you can use class.
    - you can define a class and inside that class put all the functions you want to add fixture.
    - Refer:  test_fixtureclass.py
    - you are able to also set scope for the class.
    
  



     
 
  
